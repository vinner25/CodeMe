package leetcode;

import com.vinner.codeme.leetcode.ValidateSudoku;
import org.junit.Assert;
import org.junit.Test;

public class ValidateSudokuTest {

    ValidateSudoku vs = new ValidateSudoku();

    @Test
    public void validateSudoku()
    {
        char[][] arr = new char[][]{
                {'5','3','.','.','7','.','.','.','.'},
                {'6','.','.','1','9','5','.','.','.'},
                {'.','9','8','.','.','.','.','6','.'},
                {'8','.','.','.','6','.','.','.','3'},
                {'4','.','.','8','.','3','.','.','1'},
                {'7','.','.','.','2','.','.','.','6'},
                {'.','6','.','.','.','.','2','8','.'},
                {'.','.','.','4','1','9','.','.','5'},
                {'.','.','.','.','8','.','.','7','9'}};

        Assert.assertTrue(vs.isValidSudoku(arr));

    }

    @Test
    public void validateSudoku2()
    {

        char[][] arr = new char[][]  {
                {'.','.','.','.','5','.','.','1','.'},
                {'.','4','.','3','.','.','.','.','.'},
                {'.','.','.','.','.','3','.','.','1'},
                {'8','.','.','.','.','.','.','2','.'},
                {'.','.','2','.','7','.','.','.','.'},
                {'.','1','5','.','.','.','.','.','.'},
                {'.','.','.','.','.','2','.','.','.'},
                {'.','2','.','9','.','.','.','.','.'},
                {'.','.','4','.','.','.','.','.','.'}};

        Assert.assertFalse(vs.isValidSudoku(arr));

    }

    @Test
    public void validateSudoku3()
    {

        char[][] arr = new char[][]
                       {{'.','8','7','6','5','4','3','2','1'},
                        {'2','.','.','.','.','.','.','.','.'},
                        {'3','.','.','.','.','.','.','.','.'},
                        {'4','.','.','.','.','.','.','.','.'},
                        {'5','.','.','.','.','.','.','.','.'},
                        {'6','.','.','.','.','.','.','.','.'},
                        {'7','.','.','.','.','.','.','.','.'},
                        {'8','.','.','.','.','.','.','.','.'},
                        {'9','.','.','.','.','.','.','.','.'}};

        Assert.assertTrue(vs.isValidSudoku(arr));

    }
}
